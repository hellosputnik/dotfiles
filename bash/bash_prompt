# bash_prompt
#
# This file configures the bash prompt, specifically the PS1 environment
# variable.

# Set variables for colors with `tput`.
reset="\[$(tput sgr0)\]"
red="\[$(tput setaf 1)\]"
green="\[$(tput setaf 2)\]"
yellow="\[$(tput setaf 3)\]"
blue="\[$(tput setaf 4)\]"
magenta="\[$(tput setaf 5)\]"
cyan="\[$(tput setaf 6)\]"
white="\[$(tput setaf 7)\]"

# Set variables for PS1 components.
username="$red\u$reset"
hostname="$blue\h$reset"
directory="$green\w$reset"
status="$magenta\$(git-status)$reset"

# Define functions for the PS1.
git-status() {
    # Check if the working directory is part of a git repository.
    if [ "$(git rev-parse --git-dir)" ]; then
        local branch="$(git symbolic-ref --quiet --short HEAD)"
        local symbol=""

        # Check for untracked files.
        if [ -n "$(git ls-files --others --exclude-standard)" ]; then
            symbol="${symbol}?"
        fi

        # Check for unstaged changes.
        if ! $(git diff-files --quiet --ignore-submodules); then
            symbol="${symbol}!"
        fi

        # Check for staged changes that have not been commited.
        if ! $(git diff --quiet --ignore-submodules --cached); then
            symbol="${symbol}+"
        fi

        # If there were any symbols to display, then wrap the symbols in square
        # brackets.
        if [ -n "${symbol}" ]; then
            symbol="[${symbol}]"
        fi

        printf "${branch} î‚  ${symbol}"
    fi
} 2>/dev/null

# Set the PS1.
if command -v git > /dev/null
then
    export PS1="\n${username}@${hostname}: ${directory} ${status}\n\$ $reset"
else
    export PS1="\n${username}@${hostname}: ${directory}\n\$ $reset"
fi

